# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeastalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "bohdan-flask-application-packeges"  # AWS name packege
  EB_APPLICATION_NAME: "MyFlask"
  EB_ENVIROMENT_NAME: "MyFlask-env"
  DEPLOY_PACKAGE_NAME: "flask_app_${{github.sha}}.zip"
  AWS_REGION_NAME: "eu-central-1"
  
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]


  workflow_dispatch:

jobs:

  my-ci-part:
    runs-on: ubuntu-latest

    steps:

      - name: Git clone our repo
        uses: actions/checkout@v1
     
      - name: Create ZIP deployment packege
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git* #запакувати все крім файлів з розширенням .git
        
      # Authentification with AWS user
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
            aws-access-key-id    : ${{secrets.MY_AWS_ACCESS_KEY}}
            aws-secret-access-key: ${{secrets.MY_AWS_SECRET_KEY}}
            aws-region           : ${{env.AWS_REGION_NAME}}
    
      - name: Copy Deployment packege to S3 Bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKEGE_S3_BUCKET_NAME }}
        
      - name: Print Happy message for CI finish
        run: echo "CI pipeline is DONE!"
  
  my-cd-part:
    runs-on: ubuntu-latest
    needs: [my-ci-part]

    steps:
      # Authentification with AWS user
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
            aws-access-key-id    : ${{secrets.MY_AWS_ACCESS_KEY}}
            aws-secret-access-key: ${{secrets.MY_AWS_SECRET_KEY}}
            aws-region           : ${{env.AWS_REGION_NAME}}
     
      - name: Create new ElasticBeanstalk Application
        run : |
         aws elasticbeanstalk create-application-version \
         --application-name ${{ env.EB_APPLICATION_NAME }} \
         --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
         --version-label "Ver-${{ github.sha }}" \
         --description "CoimmitSHA-${{ github.sha }}"
          
      - name:  Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
             
      - name: Print Happy message for CD finish
        run: echo "CD pipeline is DONE!"
